<?xml version="1.0" encoding="UTF-8"?>
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
<!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
<!--xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">-->

<!--引入aspectJ的约束-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--开启aspectJ的注解开发，自动代理-->
    <aop:aspectj-autoproxy/>

    <!--
        *通知类型
        @Before 相当于 BeforeAdvice
        @AfterReturning 相当于 AfterReturningAdvice
        @Around 相当于 MethodInterceptor (可以阻止目标方法的执行)
        @AfterThrowing 相当于 ThrowAdvice 异常抛出通知
        @After 最终final通知，不管是否异常，改通知都会执行
        @DeclareParents 引介通知
    -->

    <!--
        execution(<访问修饰符>?<返回类型><方法名>(<参数>)<异常>)
        例如：
            匹配所有类public方法 execution(public * *(..))
            匹配指定包下所有类方法 execution(* com.imooc.dao.*(..)) 不包含子包
            execution(* com.imooc.dao..*(..)) ..*表示包，子孙包下所有类
            匹配指定类所有方法 execution(* com.imooc.service.UserService.*(..))
            匹配实现特定接口所有类方法  exexution(* com.imooc.dao.GenericDao+.*(..))  +表示子类
            匹配所有save开头的方法 execution(* save*(..))
    -->

    <!--目标类-->
    <bean id="productDao" class="com.imooc.aop.aspectJ.ProductDao"/>

    <!--定义切面-->
    <bean class="com.imooc.aop.aspectJ.MyAspectAnno"/>



</beans>